{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALY","SORT_FIELD_LENGHT","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","finalGoods","sort","good1","good2","localeCompare","length","reverse","getPrepearedGoods","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA2B,QAC3BC,EAAoB,SA6BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA9BR,SAA2BC,EAA3B,GAAgE,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACzCI,EAAU,YAAOD,GAErB,OAAQL,GACN,KAAKJ,EACHU,EAAaA,EAAWC,MACtB,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExC,MAEF,KAAKZ,EACHS,EAAaA,EAAWC,MACtB,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAY7C,OAJIT,GACFI,EAAWM,UAGNN,EAMcO,CAAkBlB,EAAiB,CACtDK,YACAE,iBAQF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IAAW,iBAAkB,CACtC,WAAYjB,IAAcJ,IAJ9B,iCAUA,wBACEmB,KAAK,SACLC,QAAS,kBAAMf,EAAaJ,IAC5BiB,UAAWG,IAAW,oBAAqB,CACzC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,KAAK,SACLC,QAAS,kBAAMb,GAAiBD,IAChCY,UAAWG,IAAW,oBAAqB,CACzC,YAAaf,IAJjB,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVE,QA1CV,WACEf,EAAa,IACbE,GAAgB,IAqCV,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4d80969.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\r\nimport './App.scss';\r\nimport { useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport const goodsFromServer = [\r\n  'Dumplings',\r\n  'Carrot',\r\n  'Eggs',\r\n  'Ice cream',\r\n  'Apple',\r\n  'Bread',\r\n  'Fish',\r\n  'Honey',\r\n  'Jam',\r\n  'Garlic',\r\n];\r\n\r\nconst SORT_FIELD_ALPHABETICALY = 'alpha';\r\nconst SORT_FIELD_LENGHT = 'lenght';\r\n\r\nfunction getPrepearedGoods(goods, { sortField, reverseField }) {\r\n  let finalGoods = [...goods];\r\n\r\n  switch (sortField) {\r\n    case SORT_FIELD_ALPHABETICALY:\r\n      finalGoods = finalGoods.sort(\r\n        (good1, good2) => good1.localeCompare(good2),\r\n      );\r\n      break;\r\n\r\n    case SORT_FIELD_LENGHT:\r\n      finalGoods = finalGoods.sort(\r\n        (good1, good2) => good1.length - good2.length,\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (reverseField) {\r\n    finalGoods.reverse();\r\n  }\r\n\r\n  return finalGoods;\r\n}\r\n\r\nexport const App = () => {\r\n  const [sortField, setSortField] = useState('');\r\n  const [reverseField, setReverseField] = useState(false);\r\n  const visibleGoods = getPrepearedGoods(goodsFromServer, {\r\n    sortField,\r\n    reverseField,\r\n  });\r\n\r\n  function reset() {\r\n    setSortField('');\r\n    setReverseField(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"section content\">\r\n      <div className=\"buttons\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALY)}\r\n          className={classNames('button is-info', {\r\n            'is-light': sortField !== SORT_FIELD_ALPHABETICALY,\r\n          })}\r\n        >\r\n          Sort alphabetically\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setSortField(SORT_FIELD_LENGHT)}\r\n          className={classNames('button is-success', {\r\n            'is-light': sortField !== SORT_FIELD_LENGHT,\r\n          })}\r\n        >\r\n          Sort by length\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setReverseField(!reverseField)}\r\n          className={classNames('button is-warning', {\r\n            'is-light': !reverseField,\r\n          })}\r\n        >\r\n          Reverse\r\n        </button>\r\n\r\n        {(sortField || reverseField) && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"button is-danger is-light\"\r\n            onClick={reset}\r\n          >\r\n            Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <ul>\r\n        {visibleGoods.map(good => (\r\n          <li data-cy=\"Good\" key={good}>{good}</li>\r\n        ))}\r\n      </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}